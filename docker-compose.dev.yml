version: '3.8'

services:
    app:
        build:
            dockerfile: .docker/dev/app/Dockerfile
            args:
                IMAGE_REGISTRY: ${IMAGE_REGISTRY}
                IMAGE_TAG: ${IMAGE_TAG}
        volumes:
            - ./api:/var/www/html/api
            - ./client:/var/www/html/client
        links:
            - postgres
            - postgres-testing
            - redis
            - mailhog
        hostname: app
        ports:
            - "3000:3000" # The Nuxt app port
            - "24678:24678" # The Vite port for WebSocket
            - "8000:8000"
        networks:
            - client
            - api
            - gateway
        restart: unless-stopped

    queue:
        build:
            dockerfile: .docker/dev/queue/Dockerfile
            args:
                IMAGE_REGISTRY: ${IMAGE_REGISTRY}
                IMAGE_TAG: ${IMAGE_TAG}
        volumes:
            - ./api:/var/www/html/api
        links:
            - postgres
            - redis
            - mailhog
        networks:
            - api

    schedule:
        build:
            dockerfile: .docker/dev/schedule/Dockerfile
            args:
                IMAGE_REGISTRY: ${IMAGE_REGISTRY}
                IMAGE_TAG: ${IMAGE_TAG}
        volumes:
            - ./api:/var/www/html/api
        links:
            - postgres
            - redis
            - mailhog
        networks:
            - api

    postgres:
        build:
            dockerfile: .docker/dev/postgres/Dockerfile
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - postgres:/var/lib/postgresql/data
            - ./.docker/dev/postgres/dumps/:/tmp
        ports:
            - "5432:5432"
        networks:
            - api

    postgres-testing:
        build:
            dockerfile: .docker/dev/postgres/Dockerfile
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        networks:
            - api

    redis:
        build:
            dockerfile: .docker/dev/redis/Dockerfile
        volumes:
            - redis:/data
        ports:
            - "6379:6379"
        networks:
            - api

    mailhog:
        build:
            dockerfile: .docker/dev/mailhog/Dockerfile
        ports:
            - "8025:8025"
        networks:
            - api

volumes:
    postgres:
        driver: local

    redis:
        driver: local

networks:
    api:
        name: api

    client:
        name: client

    gateway:
        name: gateway
        external: true
